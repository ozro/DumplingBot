#!/usr/bin/env python

import sys
import rospy
from planning.srv import *
from geometry_msgs.msg import Vector3
from planning.msg import global_plan

def planning(start, goal):
    rospy.wait_for_service('plan_path')
    try:
        path = rospy.ServiceProxy('plan_path', plan)
        resp1 = path(start, goal)
        
        return resp1.path
    except rospy.ServiceException, e:
        print "Service call failed: %s"%e

if __name__ == "__main__":
    if len(sys.argv) == 3:
        start = int(sys.argv[1])
        goal = int(sys.argv[2])
    else:
        sys.exit(1)
    pub = rospy.Publisher('global_plan',global_plan,queue_size = 1)
    rospy.init_node('test')

    planned = planning(start, goal)
    rate = rospy.Rate(10)
    while not rospy.is_shutdown():

        plan_return = global_plan()
        vec3 = Vector3()
        for state in planned:
            vec3.x = 0
            vec3.y = 0
            vec3.z = 0
            plan_return.global_plan.append(vec3)
        pub.publish(plan_return)
        rate.sleep()
