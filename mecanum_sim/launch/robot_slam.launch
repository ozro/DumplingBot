<launch>
  <node name="tf_broadcaster_node" pkg="mecanum_sim" type="tf_broadcaster_node"></node>
  <node name="usb_cam1" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video2" />
    <param name="camera_info_url" value="package://usb_cam/camera_info/camera1.yaml"/>
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam1" />
    <param name="io_method" value="mmap"/>
  </node>
  <node name="usb_cam2" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video1" />
    <param name="camera_info_url" value="package://usb_cam/camera_info/camera2.yaml"/>
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam2" />
    <param name="io_method" value="mmap"/>
  </node>

 <node name = "image_proc" pkg = "image_proc" type = "image_proc" ns = "usb_cam1"></node>
 <node name = "image_proc" pkg = "image_proc" type = "image_proc" ns = "usb_cam2"></node>
 <arg name="camera" default="/usb_cam1"/>
 <arg name="camera1" default="/usb_cam2"/>
  <arg name="image" default="image_rect"/>
  <arg name="transport" default="compressed"/>
  <arg name="fiducial_len" default="0.14"/>
  <arg name="dictionary" default="7"/>
  <arg name="do_pose_estimation" default="true"/>
  <arg name="ignore_fiducials" default="" />
  <arg name="fiducial_len_override" default="" />

  <node pkg="aruco_detect" name="aruco_detect"
    type="aruco_detect" respawn="false">
    <param name="image_transport" value="$(arg transport)"/>
    <param name="publish_images" value="true" />
    <param name="fiducial_len" value="$(arg fiducial_len)"/>
    <param name="dictionary" value="$(arg dictionary)"/>
    <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
    <param name="ignore_fiducials" value="$(arg ignore_fiducials)"/>
    <param name="fiducial_len_override" value="$(arg fiducial_len_override)"/>
    <remap from="/camera/compressed" 
        to="$(arg camera)/$(arg image)/$(arg transport)"/>
    <remap from="/camera_info" to="$(arg camera)/camera_info"/>
  </node>
  <node pkg="aruco_detect" name="aruco_detect1"
    type="aruco_detect" respawn="false">
    <param name="image_transport" value="$(arg transport)"/>
    <param name="publish_images" value="true" />
    <param name="fiducial_len" value="$(arg fiducial_len)"/>
    <param name="dictionary" value="$(arg dictionary)"/>
    <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
    <param name="ignore_fiducials" value="$(arg ignore_fiducials)"/>
    <param name="fiducial_len_override" value="$(arg fiducial_len_override)"/>
    <remap from="/camera/compressed" 
        to="$(arg camera1)/$(arg image)/$(arg transport)"/>
    <remap from="/camera_info" to="$(arg camera1)/camera_info"/>
    <remap from="/fiducial_vertices" to="fiducial_vertices1"/>
  </node>




  <arg name="map_frame" default="map"/>
  <arg name="odom_frame" default=""/>
  <arg name="base_frame" default="base_link_visual1"/>
  <arg name="base_frame1" default="base_link_visual2"/>
  <arg name="publish_tf" default="true"/>
  <arg name="tf_publish_interval" default="0.2"/>
  <arg name="future_date_transforms" default="0.0"/>
  <arg name="publish_6dof_pose" default="true"/>
  <arg name="systematic_error" default="0.01"/>

  <arg name="covariance_diagonal" default="[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]"/>

  <node type="fiducial_slam" pkg="fiducial_slam" 
    name="fiducial_slam">
    <param name="map_file" value="$(env HOME)/.ros/slam/map1.txt" />
    <param name="read_only_map" value="true" />
    <param name="map_frame" value="$(arg map_frame)" />
    <param name="odom_frame" value="$(arg odom_frame)" />
    <param name="base_frame" value="$(arg base_frame)" />
    <param name="publish_tf" value="$(arg publish_tf)" />
    <param name="tf_publish_interval" value="$(arg tf_publish_interval)" />
    <param name="future_date_transforms" value="$(arg future_date_transforms)" />
    <param name="publish_6dof_pose" value="$(arg publish_6dof_pose)" />
    <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
    <param name="sum_error_in_quadrature" value="true"/>
    <param name="fiducial_len" value="$(arg fiducial_len)"/>
    <param name="covariance_diagonal" value="$(arg covariance_diagonal)"/>
    <remap from="/camera_info" to="$(arg camera)/camera_info"/>

  </node>

  <node type="fiducial_slam" pkg="fiducial_slam" 
    name="fiducial_slam1">
    <param name="map_file" value="$(env HOME)/.ros/slam/map2.txt" />
    <param name="map_frame" value="$(arg map_frame)" />
    <param name="read_only_map" value="true" />
    <param name="odom_frame" value="$(arg odom_frame)" />
    <param name="base_frame" value="$(arg base_frame1)" />
    <param name="publish_tf" value="$(arg publish_tf)" />
    <param name="tf_publish_interval" value="$(arg tf_publish_interval)" />
    <param name="future_date_transforms" value="$(arg future_date_transforms)" />
    <param name="publish_6dof_pose" value="$(arg publish_6dof_pose)" />
    <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
    <param name="sum_error_in_quadrature" value="true"/>
    <param name="fiducial_len" value="$(arg fiducial_len)"/>
    <param name="covariance_diagonal" value="$(arg covariance_diagonal)"/>
    <remap from="/camera_info" to="$(arg camera1)/camera_info"/>
    <remap from="/fiducial_vertices" to="fiducial_vertices1"/>
    <remap from="/fiducial_map" to="fiducial_map1"/>
    <remap from="/fiducials" to="fiducials1"/>
    <remap from="/fiducial_images" to="fiducial_images1"/>
  </node>

<node pkg="tf" type="static_transform_publisher" name="map_broadcaster" args="0 0 0 0 0 0 1 world map 100" />
<node name="planning" pkg="planning" type="planning"/>
<node name="localization_encoder" pkg="localization" type="localization_encoder"/>
<node name="localize_visual" pkg="localization" type="localize_visual"/>
<node name="localize_visual2" pkg="localization" type="localize_visual"/>


</launch>
